{"ast":null,"code":"var _jsxFileName = \"C:\\\\New folder\\\\src\\\\contexts\\\\CartContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  items: [],\n  total: 0,\n  itemCount: 0\n};\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      {\n        const existingItem = state.items.find(item => item.id === action.payload.id);\n        let newItems;\n        if (existingItem) {\n          newItems = state.items.map(item => item.id === action.payload.id ? {\n            ...item,\n            quantity: item.quantity + action.payload.quantity\n          } : item);\n        } else {\n          newItems = [...state.items, action.payload];\n        }\n        const newTotal = newItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n        const newItemCount = newItems.reduce((sum, item) => sum + item.quantity, 0);\n        return {\n          ...state,\n          items: newItems,\n          total: newTotal,\n          itemCount: newItemCount\n        };\n      }\n    case 'REMOVE_ITEM':\n      {\n        const newItems = state.items.filter(item => item.id !== action.payload);\n        const newTotal = newItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n        const newItemCount = newItems.reduce((sum, item) => sum + item.quantity, 0);\n        return {\n          ...state,\n          items: newItems,\n          total: newTotal,\n          itemCount: newItemCount\n        };\n      }\n    case 'UPDATE_QUANTITY':\n      {\n        const newItems = state.items.map(item => item.id === action.payload.id ? {\n          ...item,\n          quantity: action.payload.quantity\n        } : item);\n        const newTotal = newItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n        const newItemCount = newItems.reduce((sum, item) => sum + item.quantity, 0);\n        return {\n          ...state,\n          items: newItems,\n          total: newTotal,\n          itemCount: newItemCount\n        };\n      }\n    case 'CLEAR_CART':\n      return {\n        ...state,\n        items: [],\n        total: 0,\n        itemCount: 0\n      };\n    case 'LOAD_CART':\n      {\n        const newTotal = action.payload.reduce((sum, item) => sum + item.price * item.quantity, 0);\n        const newItemCount = action.payload.reduce((sum, item) => sum + item.quantity, 0);\n        return {\n          ...state,\n          items: action.payload,\n          total: newTotal,\n          itemCount: newItemCount\n        };\n      }\n    default:\n      return state;\n  }\n};\nconst CartContext = /*#__PURE__*/createContext(undefined);\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n\n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      try {\n        const parsedCart = JSON.parse(savedCart);\n        dispatch({\n          type: 'LOAD_CART',\n          payload: parsedCart\n        });\n      } catch (error) {\n        console.error('Error loading cart from localStorage:', error);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(state.items));\n  }, [state.items]);\n  const addItem = item => {\n    dispatch({\n      type: 'ADD_ITEM',\n      payload: item\n    });\n  };\n  const removeItem = id => {\n    dispatch({\n      type: 'REMOVE_ITEM',\n      payload: id\n    });\n  };\n  const updateQuantity = (id, quantity) => {\n    if (quantity <= 0) {\n      removeItem(id);\n    } else {\n      dispatch({\n        type: 'UPDATE_QUANTITY',\n        payload: {\n          id,\n          quantity\n        }\n      });\n    }\n  };\n  const clearCart = () => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n  };\n  const value = {\n    state,\n    addItem,\n    removeItem,\n    updateQuantity,\n    clearCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","initialState","items","total","itemCount","cartReducer","state","action","type","existingItem","find","item","id","payload","newItems","map","quantity","newTotal","reduce","sum","price","newItemCount","filter","CartContext","undefined","useCart","_s","context","Error","CartProvider","children","_s2","dispatch","savedCart","localStorage","getItem","parsedCart","JSON","parse","error","console","setItem","stringify","addItem","removeItem","updateQuantity","clearCart","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/New folder/src/contexts/CartContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nexport interface CartItem {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  quantity: number;\r\n  variant?: string;\r\n}\r\n\r\ninterface CartState {\r\n  items: CartItem[];\r\n  total: number;\r\n  itemCount: number;\r\n}\r\n\r\ntype CartAction =\r\n  | { type: 'ADD_ITEM'; payload: CartItem }\r\n  | { type: 'REMOVE_ITEM'; payload: string }\r\n  | { type: 'UPDATE_QUANTITY'; payload: { id: string; quantity: number } }\r\n  | { type: 'CLEAR_CART' }\r\n  | { type: 'LOAD_CART'; payload: CartItem[] };\r\n\r\nconst initialState: CartState = {\r\n  items: [],\r\n  total: 0,\r\n  itemCount: 0,\r\n};\r\n\r\nconst cartReducer = (state: CartState, action: CartAction): CartState => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM': {\r\n      const existingItem = state.items.find(item => item.id === action.payload.id);\r\n      let newItems;\r\n      \r\n      if (existingItem) {\r\n        newItems = state.items.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, quantity: item.quantity + action.payload.quantity }\r\n            : item\r\n        );\r\n      } else {\r\n        newItems = [...state.items, action.payload];\r\n      }\r\n      \r\n      const newTotal = newItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n      const newItemCount = newItems.reduce((sum, item) => sum + item.quantity, 0);\r\n      \r\n      return {\r\n        ...state,\r\n        items: newItems,\r\n        total: newTotal,\r\n        itemCount: newItemCount,\r\n      };\r\n    }\r\n    \r\n    case 'REMOVE_ITEM': {\r\n      const newItems = state.items.filter(item => item.id !== action.payload);\r\n      const newTotal = newItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n      const newItemCount = newItems.reduce((sum, item) => sum + item.quantity, 0);\r\n      \r\n      return {\r\n        ...state,\r\n        items: newItems,\r\n        total: newTotal,\r\n        itemCount: newItemCount,\r\n      };\r\n    }\r\n    \r\n    case 'UPDATE_QUANTITY': {\r\n      const newItems = state.items.map(item =>\r\n        item.id === action.payload.id\r\n          ? { ...item, quantity: action.payload.quantity }\r\n          : item\r\n      );\r\n      const newTotal = newItems.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n      const newItemCount = newItems.reduce((sum, item) => sum + item.quantity, 0);\r\n      \r\n      return {\r\n        ...state,\r\n        items: newItems,\r\n        total: newTotal,\r\n        itemCount: newItemCount,\r\n      };\r\n    }\r\n    \r\n    case 'CLEAR_CART':\r\n      return {\r\n        ...state,\r\n        items: [],\r\n        total: 0,\r\n        itemCount: 0,\r\n      };\r\n      \r\n    case 'LOAD_CART': {\r\n      const newTotal = action.payload.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n      const newItemCount = action.payload.reduce((sum, item) => sum + item.quantity, 0);\r\n      \r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        total: newTotal,\r\n        itemCount: newItemCount,\r\n      };\r\n    }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ninterface CartContextType {\r\n  state: CartState;\r\n  addItem: (item: CartItem) => void;\r\n  removeItem: (id: string) => void;\r\n  updateQuantity: (id: string, quantity: number) => void;\r\n  clearCart: () => void;\r\n}\r\n\r\nconst CartContext = createContext<CartContextType | undefined>(undefined);\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CartProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(cartReducer, initialState);\r\n\r\n  // Load cart from localStorage on mount\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      try {\r\n        const parsedCart = JSON.parse(savedCart);\r\n        dispatch({ type: 'LOAD_CART', payload: parsedCart });\r\n      } catch (error) {\r\n        console.error('Error loading cart from localStorage:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(state.items));\r\n  }, [state.items]);\r\n\r\n  const addItem = (item: CartItem) => {\r\n    dispatch({ type: 'ADD_ITEM', payload: item });\r\n  };\r\n\r\n  const removeItem = (id: string) => {\r\n    dispatch({ type: 'REMOVE_ITEM', payload: id });\r\n  };\r\n\r\n  const updateQuantity = (id: string, quantity: number) => {\r\n    if (quantity <= 0) {\r\n      removeItem(id);\r\n    } else {\r\n      dispatch({ type: 'UPDATE_QUANTITY', payload: { id, quantity } });\r\n    }\r\n  };\r\n\r\n  const clearCart = () => {\r\n    dispatch({ type: 'CLEAR_CART' });\r\n  };\r\n\r\n  const value: CartContextType = {\r\n    state,\r\n    addItem,\r\n    removeItem,\r\n    updateQuantity,\r\n    clearCart,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}